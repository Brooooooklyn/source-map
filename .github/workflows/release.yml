name: release
on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          # Windows
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          # Mac OS
          - os: macos-latest
            target: x86_64-apple-darwin
            strip: strip -x # Must use -x on macOS. This produces larger results on linux.

    name: build-${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Node.JS
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Setup rust target
        run: rustup target add ${{ matrix.target }}

      - name: enable corepack
        run: corepack enable

      - uses: bahmutov/npm-install@v1
      - name: Transpile JavaScript
        run: yarn run transpile
      - name: Build node release
        run: yarn run build:node-release
        env:
          RUST_TARGET: ${{ matrix.target }}
      - name: Strip debug symbols # https://github.com/rust-lang/rust/issues/46034
        if: ${{ matrix.strip }}
        run: ${{ matrix.strip }} parcel_sourcemap_node/artifacts/*.node
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bindings-${{ matrix.target }}
          path: parcel_sourcemap_node/artifacts/*.node

  build-apple-silicon:
    name: build-apple-silicon
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Node.JS
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Setup rust target
        run: rustup target add aarch64-apple-darwin

      - name: enable corepack
        run: corepack enable

      - uses: bahmutov/npm-install@v1
      - name: Transpile JavaScript
        run: yarn run transpile
      - name: Build node release
        run: yarn run build:node-release
        env:
          RUST_TARGET: aarch64-apple-darwin
          JEMALLOC_SYS_WITH_LG_PAGE: 14
      - name: Strip debug symbols # https://github.com/rust-lang/rust/issues/46034
        run: strip -x parcel_sourcemap_node/artifacts/*.node
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bindings-aarch64-apple-darwin
          path: parcel_sourcemap_node/artifacts/*.node

  build-linux:
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            strip: strip
            image: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian
          - target: aarch64-unknown-linux-gnu
            strip: aarch64-linux-gnu-strip
            image: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian-aarch64
            setup: apt install gcc-aarch64-linux-gnu g++-aarch64-linux-gnu -y
          - target: armv7-unknown-linux-gnueabihf
            strip: arm-linux-gnueabihf-strip
            image: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian
            setup: apt install gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf -y
          - target: aarch64-unknown-linux-musl
            image: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-alpine
            strip: aarch64-linux-musl-strip
          - target: x86_64-unknown-linux-musl
            image: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-alpine
            strip: strip

    name: build-${{ matrix.target }}
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.image }}

    steps:
      - uses: actions/checkout@v4
      - name: Install Node.JS
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Setup cross compile toolchain
        if: ${{ matrix.setup }}
        run: ${{ matrix.setup }}

      - name: Setup rust target
        run: rustup target add ${{ matrix.target }}
      - name: enable corepack
        run: corepack enable
      - uses: bahmutov/npm-install@v1
      - name: Transpile JavaScript
        run: yarn run transpile
      - name: Build node release
        run: yarn run build:node-release
        env:
          RUST_TARGET: ${{ matrix.target }}
      - name: Strip debug symbols # https://github.com/rust-lang/rust/issues/46034
        if: ${{ matrix.strip }}
        run: ${{ matrix.strip }} parcel_sourcemap_node/artifacts/*.node
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bindings-${{ matrix.target }}
          path: parcel_sourcemap_node/artifacts/*.node

  release:
    runs-on: ubuntu-latest
    name: Build and release
    needs:
      - build
      - build-linux
      - build-apple-silicon
    steps:
      - uses: actions/checkout@v4
      - name: enable corepack
        run: corepack enable
      - uses: bahmutov/npm-install@v1
      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: parcel_sourcemap_node/artifacts
      - name: Move artifacts
        run: node ./move-artifacts.js
      - run: echo //registry.npmjs.org/:_authToken=${NPM_TOKEN} > .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Build wasm-web release
        run: yarn run build:wasm-web-release
      - name: Build wasm-node release
        run: yarn run build:wasm-node-release
      - run: npm publish

  release-crates:
    runs-on: ubuntu-latest
    name: Release Rust crate
    steps:
      - uses: actions/checkout@v4
      - name: enable corepack
        run: corepack enable
      - uses: bahmutov/npm-install@v1
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - run: cargo login ${CRATES_IO_TOKEN}
        env:
          CRATES_IO_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
      - run: cd parcel_sourcemap && cargo publish
